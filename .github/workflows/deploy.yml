name: 🚀 自动部署到VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📤 开始部署
      run: echo "开始自动部署到VPS..."
    
    - name: 📥 检出代码
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # 获取最近2次提交用于比较
    
    - name: 🔍 检查更改
      id: changes
      run: |
        echo "检查文件更改..."
        FRONTEND_CHANGED=$(git diff --name-only HEAD~1 HEAD | grep -c "frontend/" || echo "0")
        BACKEND_CHANGED=$(git diff --name-only HEAD~1 HEAD | grep -c "backend/" || echo "0")
        echo "frontend_changed=$FRONTEND_CHANGED" >> $GITHUB_OUTPUT
        echo "backend_changed=$BACKEND_CHANGED" >> $GITHUB_OUTPUT
        echo "前端更改: $FRONTEND_CHANGED"
        echo "后端更改: $BACKEND_CHANGED"
    
    - name: 📦 设置Node.js
      if: steps.changes.outputs.frontend_changed != '0'
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: 🔨 构建前端
      if: steps.changes.outputs.frontend_changed != '0'
      run: |
        echo "构建前端..."
        cd frontend
        npm ci
        npm run build
        tar -czf build.tar.gz build/
    
    - name: 📤 上传前端到VPS
      if: steps.changes.outputs.frontend_changed != '0'
      uses: appleboy/scp-action@v0.1.5
      with:
        host: 45.149.156.216
        username: root
        key: ${{ secrets.VPS_SSH_KEY }}
        source: "frontend/build.tar.gz"
        target: "/tmp/"
        strip_components: 1
    
    - name: 🚀 部署到VPS
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: 45.149.156.216
        username: root
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          echo "🔄 开始自动部署..."
          cd /var/www/research-dashboard
          
          echo "🔧 配置 Git 安全目录..."
          git config --global --add safe.directory /var/www/research-dashboard
          
          echo "📥 强制更新到最新代码..."
          git fetch --all
          git reset --hard origin/main
          git clean -fd
          
          echo "🔍 显示最新提交..."
          git log --oneline -3
          
          echo "🔄 始终更新Nginx配置（端口3001）..."
          sudo cp deployment/nginx-3001.conf /etc/nginx/sites-available/research-dashboard-3001
          sudo ln -sf /etc/nginx/sites-available/research-dashboard-3001 /etc/nginx/sites-enabled/
          sudo nginx -t && sudo systemctl reload nginx
          
          # 检查是否有前端更新
          if [ -f /tmp/build.tar.gz ]; then
            echo "🎨 检测到前端更新，部署新版本..."
            cd /tmp
            tar -xzf build.tar.gz
            
            # 蓝绿部署：先准备新版本，再快速切换
            if [ -d /var/www/html ]; then
              sudo rm -rf /var/www/html.old
              sudo mv /var/www/html /var/www/html.old
            fi
            sudo mv build /var/www/html
            sudo chown -R www-data:www-data /var/www/html
            
            # 清理
            rm -f build.tar.gz
            sudo rm -rf /var/www/html.old
            
            echo "✅ 前端部署完成"
          else
            echo "📦 前端无更新"
          fi
          
          echo "🔍 检查后端更改..."
          cd /var/www/research-dashboard
          BACKEND_CHANGED=$(git diff HEAD~1 --name-only | grep -c "backend/" || echo "0")
          
          if [ "$BACKEND_CHANGED" -gt 0 ]; then
            echo "🐍 检测到后端更改，重启服务..."
            
            # 备份数据库
            cd backend
            if [ -f research_dashboard.db ]; then
              cp research_dashboard.db research_dashboard.db.backup_$(date +%Y%m%d_%H%M%S)
              echo "✅ 数据库已备份"
            fi
            cd ..
            
            echo "🔄 重启后端服务..."
            systemctl restart research-backend
            sleep 5
            echo "✅ 后端服务已重启"
          else
            echo "✅ 后端无更改"
          fi
          
          echo "🔄 最终重新加载Nginx..."
          sudo systemctl reload nginx
          
          echo "🔍 检查服务状态..."
          systemctl is-active --quiet research-backend && echo "✅ 后端运行正常" || echo "❌ 后端异常"
          systemctl is-active --quiet nginx && echo "✅ Nginx运行正常" || echo "❌ Nginx异常"
          
          echo "🎉 自动部署完成！"
          echo "📅 部署时间: $(date)"
          echo "🌐 访问地址: http://45.149.156.216:3001"