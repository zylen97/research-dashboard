name: 🚀 自动部署到VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📤 开始部署
      run: echo "开始自动部署到VPS..."
    
    - name: 🚀 部署到VPS
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: 45.149.156.216
        username: root
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          echo "🔄 开始自动部署..."
          cd /var/www/research-dashboard
          
          echo "🔧 配置 Git 安全目录..."
          git config --global --add safe.directory /var/www/research-dashboard
          
          echo "📥 强制更新到最新代码..."
          git fetch --all
          git reset --hard origin/main
          git clean -fd
          
          echo "🔍 显示最新提交..."
          git log --oneline -3
          
          echo "🔄 始终更新Nginx配置（端口3001）..."
          sudo cp deployment/nginx-3001.conf /etc/nginx/sites-available/research-dashboard-3001
          sudo ln -sf /etc/nginx/sites-available/research-dashboard-3001 /etc/nginx/sites-enabled/
          sudo nginx -t && sudo systemctl reload nginx
          
          echo "🔍 检查更改..."
          BACKEND_CHANGED=$(git diff HEAD~1 --name-only | grep -c "backend/" || echo "0")
          FRONTEND_CHANGED=$(git diff HEAD~1 --name-only | grep -c "frontend/" || echo "0")
          
          # 添加强制重建标志检查
          FORCE_REBUILD=$(git diff HEAD~1 --name-only | grep -c "FORCE_REBUILD\|force-rebuild" || echo "0")
          
          if [ "$BACKEND_CHANGED" -gt 0 ]; then
            echo "🐍 检测到后端更改..."
            
            # 检查是否是用户相关的更改
            USER_CHANGED=$(git diff HEAD~1 --name-only | grep -c "db_init.py" || echo "0")
            
            if [ "$USER_CHANGED" -gt 0 ]; then
              echo "🗄️ 检测到用户配置更改，更新用户信息..."
              cd backend
              
              # 只更新用户，不删除数据
              python3 fix_users_now.py || echo "用户更新脚本不存在，跳过"
            else
              echo "🗄️ 备份数据库..."
              cd backend
              if [ -f research_dashboard.db ]; then
                cp research_dashboard.db research_dashboard.db.backup_$(date +%Y%m%d_%H%M%S)
                echo "✅ 数据库已备份"
              fi
            fi
            
            cd ..
            
            echo "🔄 重启后端服务..."
            systemctl restart research-backend
            
            echo "⏳ 等待服务启动..."
            sleep 5
            
            echo "✅ 后端服务已重启"
          fi
          
          if [ "$FRONTEND_CHANGED" -gt 0 ] || [ "$FORCE_REBUILD" -gt 0 ]; then
            echo "⚛️ 检测到前端更改..."
            echo "⚠️  前端已预构建，跳过构建步骤"
            echo "💡 如需更新前端，请在本地构建后使用 ./deploy.sh build"
          else
            echo "✅ 前端无更改，保持现有部署"
          fi
          
          echo "🔄 最终重新加载Nginx..."
          sudo systemctl reload nginx
          
          echo "🔍 检查服务状态..."
          systemctl is-active --quiet research-backend && echo "✅ 后端运行正常" || echo "❌ 后端异常"
          systemctl is-active --quiet nginx && echo "✅ Nginx运行正常" || echo "❌ Nginx异常"
          
          echo "🔍 运行简单诊断脚本..."
          chmod +x simple-diagnosis.sh
          bash simple-diagnosis.sh
          
          echo "🎉 自动部署完成！"
          echo "📅 部署时间: $(date)"
          echo "🌐 访问地址: http://45.149.156.216:3001"