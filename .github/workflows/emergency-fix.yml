name: Emergency Database Fix

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/emergency-fix.yml'

jobs:
  fix-database:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Execute emergency fix on VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          echo "🚨 开始紧急数据库修复..."
          
          cd /var/www/research-dashboard/backend
          
          # 备份当前数据库
          cp data/research_dashboard_prod.db data/research_dashboard_prod.db.emergency.$(date +%Y%m%d_%H%M%S)
          
          # 使用Python检查数据库状态
          echo "检查数据库状态..."
          python3 -c "
import sqlite3
try:
    conn = sqlite3.connect('data/research_dashboard_prod.db')
    cursor = conn.cursor()
    
    # 检查迁移历史
    print('当前迁移记录：')
    try:
        cursor.execute('SELECT * FROM migration_history ORDER BY executed_at DESC LIMIT 5')
        for row in cursor.fetchall():
            print(f'  {row}')
    except:
        print('  无迁移记录表')
    
    # 检查research_projects表
    print('\n检查research_projects表结构：')
    cursor.execute('PRAGMA table_info(research_projects)')
    columns = [col[1] for col in cursor.fetchall()]
    print(f'  字段: {columns}')
    print(f'  user_id: {\"user_id\" in columns}')
    print(f'  is_todo: {\"is_todo\" in columns}')
    print(f'  todo_marked_at: {\"todo_marked_at\" in columns}')
    
    # 检查collaborators表
    print('\n检查collaborators表结构：')
    cursor.execute('PRAGMA table_info(collaborators)')
    columns = [col[1] for col in cursor.fetchall()]
    print(f'  字段: {columns}')
    print(f'  class_info: {\"class_info\" in columns}')
    print(f'  is_senior: {\"is_senior\" in columns}')
    
    conn.close()
except Exception as e:
    print(f'错误: {e}')
          "
          
          # 执行v1.7迁移
          echo ""
          echo "执行v1.7迁移脚本..."
          python3 migrations/migration.py || echo "迁移执行失败"
          
          # 验证迁移结果
          echo ""
          echo "验证迁移结果..."
          python3 -c "
import sqlite3
try:
    conn = sqlite3.connect('data/research_dashboard_prod.db')
    cursor = conn.cursor()
    
    cursor.execute('SELECT COUNT(*) FROM users')
    print(f'用户数: {cursor.fetchone()[0]}')
    
    cursor.execute('SELECT COUNT(*) FROM research_projects')
    print(f'项目数: {cursor.fetchone()[0]}')
    
    cursor.execute('SELECT COUNT(*) FROM collaborators')
    print(f'合作者数: {cursor.fetchone()[0]}')
    
    conn.close()
except Exception as e:
    print(f'错误: {e}')
          "
          
          # 重启服务
          echo ""
          echo "重启后端服务..."
          sudo systemctl restart research-backend
          
          # 检查服务状态
          sleep 3
          sudo systemctl is-active research-backend && echo "✅ 服务重启成功" || echo "❌ 服务重启失败"
          
          echo ""
          echo "🏁 紧急修复完成"