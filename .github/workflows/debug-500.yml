name: Debug 500 Error - Simple Database Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/test_simple_api.py'
      - '.github/workflows/debug-500.yml'

jobs:
  debug:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Debug database on VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          echo "🔍 开始500错误深度调试..."
          
          cd /var/www/research-dashboard/backend
          
          # 下载测试脚本
          curl -s https://raw.githubusercontent.com/zylen97/research-dashboard/main/backend/test_simple_api.py > test_simple_api.py
          
          # 执行数据库测试
          echo ""
          echo "1. 数据库基础测试："
          python3 test_simple_api.py
          
          # 检查后端服务日志
          echo ""
          echo "2. 检查后端服务日志（最近10行）："
          sudo journalctl -u research-backend --no-pager -n 10
          
          # 测试Python环境
          echo ""
          echo "3. 测试Python环境："
          python3 -c "
import sys
print(f'Python版本: {sys.version}')

try:
    from app.models import ResearchProject, Literature, Idea, Collaborator
    print('✅ 所有模型导入成功')
except ImportError as e:
    print(f'❌ 模型导入失败: {e}')

try:
    from sqlalchemy.orm import Session
    print('✅ SQLAlchemy导入成功')
except ImportError as e:
    print(f'❌ SQLAlchemy导入失败: {e}')
          "
          
          # 尝试简单的ORM查询
          echo ""
          echo "4. 测试ORM查询："
          python3 -c "
import sys
sys.path.insert(0, '.')
try:
    from app.models import get_db, ResearchProject
    from sqlalchemy.orm import sessionmaker
    from app.models.database import engine
    
    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    db = SessionLocal()
    
    count = db.query(ResearchProject).count()
    print(f'✅ ORM查询成功: {count} 个研究项目')
    
    db.close()
except Exception as e:
    print(f'❌ ORM查询失败: {e}')
    import traceback
    traceback.print_exc()
          "
          
          echo ""
          echo "🏁 调试完成"