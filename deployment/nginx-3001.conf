# Nginx configuration for Research Dashboard (Port 3001)
# Place this file at: /etc/nginx/sites-available/research-dashboard-3001
# Then create symlink: ln -s /etc/nginx/sites-available/research-dashboard-3001 /etc/nginx/sites-enabled/

server {
    listen 3001;
    server_name 45.149.156.216 localhost;

    # Frontend static files
    location / {
        root /var/www/html;
        try_files $uri $uri/ /index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    # HTML files - no cache
    location ~* \.html$ {
        root /var/www/html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # JS/CSS files - no cache to ensure latest code, add CORS for static files
    location ~* \.(js|css)$ {
        root /var/www/html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Range";
    }
    
    # Images - longer cache
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        root /var/www/html;
        expires 7d;
        add_header Cache-Control "public";
    }

    # Backend API proxy - with trailing slash to strip /api prefix
    location /api/ {
        proxy_pass http://localhost:8080/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_cache_bypass $http_upgrade;
        
        # 确保原始Origin头部传递给后端
        proxy_set_header Origin $http_origin;
        
        # Remove nginx CORS headers - let FastAPI handle CORS
        # This prevents conflicts between nginx and FastAPI CORS middleware
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}